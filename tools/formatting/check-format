#! /bin/bash
# Call this script to check the format every c[pp] & h[pp] file
# in the current and parent directories against the defined clang-format style.
#
# Returns
# 0 on success
# 1 on an incorrect format
# 2 is clang-format 8 could not be found 

# Detect version
if command -v clang-format-8 > /dev/null; then
    BINARY="clang-format-8"
elif command -v clang-format > /dev/null; then
    BINARY="clang-format"
    VERSION=$(clang-format --version | cut -d ' ' -f 3 | cut -d '.' -f 1)
    if (( $VERSION != 8 )); then
        echo "clang-format version 8 expected, but ${VERSION} found!"
        echo "Please install a suffixed binary (clang-format-8) or install clang-format version 8."
        exit 2
    fi
else
    echo "clang-format not found!"
    echo "Please install clang-format version 8."
    exit 2
fi
echo "Using binary: $BINARY"

FILES="$(find . -type f -name \*.hpp -or -name \*.h -or -name \*.cpp -or -name \*.c)"

echo "Checking $(echo "$FILES" | wc -l) files. This may take a while."
DIFFS=""
if command -v parallel > /dev/null; then
    echo "Using GNU parallel"
    CMD="${BINARY} -style=file --output-replacements-xml {} | grep '<replacement ' > /dev/null && echo {}"
    DIFFS=$( echo "$FILES" | parallel --bar --group "$CMD" )
else
    echo "Install GNU parallel to format in parallel."
    for cfile in $FILES; do
        ${BINARY} -style=file --output-replacements-xml $cfile | grep "<replacement " > /dev/null
        RET=$?
        if [ $RET -eq 0 ]; then
            DIFFS="$DIFFS $cfile"
        fi
    done
fi

if [[ -n "$DIFFS" ]]; then
    echo "The following files are not formatted correctly:"
    for cfile in $DIFFS; do
        echo "$cfile"
    done
    exit 1
else
    echo "All files are formatted correctly"
    exit 0
fi
